@model EntityLayer.Concrete.Portfolio
@{
    ViewData["Title"] = "AddPortfolio";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="card-header border-0">
    <h3 class="mb-0">Add New Portfolio</h3>
</div>

@using (Html.BeginForm("AddPortfolio", "Portfolio", FormMethod.Post))
{
    <br />
    @Html.Label("Portfolio Title")
    @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Name)
    <br />
    <label>Image URL 1</label>
    @Html.TextBoxFor(x => x.ImageUrl, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Image1)
    <br />
    <label>Image URL 2</label>
    @Html.TextBoxFor(x => x.ImageUrl2, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Image2)
    <br />
    <label>Project URL</label>
    @Html.TextBoxFor(x => x.ProjectUrl, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.ProjectUrl)
    <br />
    <label>Price</label>
    @Html.TextBoxFor(x => x.Price, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.ProjectUrl)
    <br />
    <label>Ratio</label>
    @Html.TextBoxFor(x => x.Ratio, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.ProjectUrl)
    <br />
    <label>Platform</label>
    @Html.TextBoxFor(x => x.Platform, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Platform)
    <br />
    <button type="submit" class="btn btn-primary">Add</button>
}

